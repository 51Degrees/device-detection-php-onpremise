<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('FiftyOneDegreesHashEngine')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_FiftyOneDegreesHashEngine.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('FiftyOneDegreesHashEngine.so')) return;
    } else {
      if (!dl('FiftyOneDegreesHashEngine.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class FiftyOneDegreesHashEngine {
	static function engine_get() {
		$r=engine_get();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new EngineHashSwig($r);
		}
		return $r;
	}
}

/* PHP Proxy Classes */
class MapStringStringSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($arg1=null) {
		if (is_resource($arg1) && get_resource_type($arg1) === '_p_std__mapT_std__string_std__string_t') {
			$this->_cPtr=$arg1;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_MapStringStringSwig(); break;
		default: $this->_cPtr=new_MapStringStringSwig($arg1);
		}
	}

	function size() {
		return MapStringStringSwig_size($this->_cPtr);
	}

	function clear() {
		MapStringStringSwig_clear($this->_cPtr);
	}

	function get($key) {
		return MapStringStringSwig_get($this->_cPtr,$key);
	}

	function set($key,$x) {
		MapStringStringSwig_set($this->_cPtr,$key,$x);
	}

	function del($key) {
		MapStringStringSwig_del($this->_cPtr,$key);
	}

	function has_key($key) {
		return MapStringStringSwig_has_key($this->_cPtr,$key);
	}

	function is_empty() {
		return MapStringStringSwig_is_empty($this->_cPtr);
	}
}

class VectorStringSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($n=null) {
		if (is_resource($n) && get_resource_type($n) === '_p_std__vectorT_std__string_t') {
			$this->_cPtr=$n;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_VectorStringSwig(); break;
		default: $this->_cPtr=new_VectorStringSwig($n);
		}
	}

	function size() {
		return VectorStringSwig_size($this->_cPtr);
	}

	function capacity() {
		return VectorStringSwig_capacity($this->_cPtr);
	}

	function reserve($n) {
		VectorStringSwig_reserve($this->_cPtr,$n);
	}

	function clear() {
		VectorStringSwig_clear($this->_cPtr);
	}

	function push($x) {
		VectorStringSwig_push($this->_cPtr,$x);
	}

	function is_empty() {
		return VectorStringSwig_is_empty($this->_cPtr);
	}

	function pop() {
		return VectorStringSwig_pop($this->_cPtr);
	}

	function get($i) {
		return VectorStringSwig_get($this->_cPtr,$i);
	}

	function set($i,$val) {
		VectorStringSwig_set($this->_cPtr,$i,$val);
	}
}

class RequiredPropertiesConfigSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($properties=null) {
		if (is_resource($properties) && get_resource_type($properties) === '_p_RequiredPropertiesConfig') {
			$this->_cPtr=$properties;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_RequiredPropertiesConfigSwig(); break;
		default: $this->_cPtr=new_RequiredPropertiesConfigSwig($properties);
		}
	}

	function getProperties() {
		$r=RequiredPropertiesConfigSwig_getProperties($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new VectorStringSwig($r);
		}
		return $r;
	}
}

class StringValueSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ValueT_std__string_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_StringValueSwig();
	}

	function hasValue() {
		return StringValueSwig_hasValue($this->_cPtr);
	}

	function getNoValueMessage() {
		return StringValueSwig_getNoValueMessage($this->_cPtr);
	}

	function getValue() {
		return StringValueSwig_getValue($this->_cPtr);
	}
}

class BoolValueSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ValueT_bool_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_BoolValueSwig();
	}

	function hasValue() {
		return BoolValueSwig_hasValue($this->_cPtr);
	}

	function getNoValueMessage() {
		return BoolValueSwig_getNoValueMessage($this->_cPtr);
	}

	function getValue() {
		return BoolValueSwig_getValue($this->_cPtr);
	}
}

class IntegerValueSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ValueT_int_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_IntegerValueSwig();
	}

	function hasValue() {
		return IntegerValueSwig_hasValue($this->_cPtr);
	}

	function getNoValueMessage() {
		return IntegerValueSwig_getNoValueMessage($this->_cPtr);
	}

	function getValue() {
		return IntegerValueSwig_getValue($this->_cPtr);
	}
}

class VectorStringValuesSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ValueT_std__vectorT_std__string_t_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_VectorStringValuesSwig();
	}

	function hasValue() {
		return VectorStringValuesSwig_hasValue($this->_cPtr);
	}

	function getNoValueMessage() {
		return VectorStringValuesSwig_getNoValueMessage($this->_cPtr);
	}

	function getValue() {
		$r=VectorStringValuesSwig_getValue($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new VectorStringSwig($r);
		}
		return $r;
	}
}

class DoubleValueSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ValueT_double_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_DoubleValueSwig();
	}

	function hasValue() {
		return DoubleValueSwig_hasValue($this->_cPtr);
	}

	function getNoValueMessage() {
		return DoubleValueSwig_getNoValueMessage($this->_cPtr);
	}

	function getValue() {
		return DoubleValueSwig_getValue($this->_cPtr);
	}
}

class ResultsBaseSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getAvailableProperties() {
		return ResultsBaseSwig_getAvailableProperties($this->_cPtr);
	}

	function containsProperty($propertyName) {
		return ResultsBaseSwig_containsProperty($this->_cPtr,$propertyName);
	}

	function getProperties() {
		$r=ResultsBaseSwig_getProperties($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new VectorStringSwig($r);
		}
		return $r;
	}

	function getPropertyName($requiredPropertyIndex) {
		return ResultsBaseSwig_getPropertyName($this->_cPtr,$requiredPropertyIndex);
	}

	function getValues($propertyName_or_requiredPropertyIndex) {
		$r=ResultsBaseSwig_getValues($this->_cPtr,$propertyName_or_requiredPropertyIndex);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new VectorStringValuesSwig($r);
		}
		return $r;
	}

	function getValueAsString($propertyName_or_requiredPropertyIndex) {
		$r=ResultsBaseSwig_getValueAsString($this->_cPtr,$propertyName_or_requiredPropertyIndex);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new StringValueSwig($r);
		}
		return $r;
	}

	function getValueAsBool($propertyName_or_requiredPropertyIndex) {
		$r=ResultsBaseSwig_getValueAsBool($this->_cPtr,$propertyName_or_requiredPropertyIndex);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new BoolValueSwig($r);
		}
		return $r;
	}

	function getValueAsInteger($propertyName_or_requiredPropertyIndex) {
		$r=ResultsBaseSwig_getValueAsInteger($this->_cPtr,$propertyName_or_requiredPropertyIndex);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new IntegerValueSwig($r);
		}
		return $r;
	}

	function getValueAsDouble($propertyName_or_requiredPropertyIndex) {
		$r=ResultsBaseSwig_getValueAsDouble($this->_cPtr,$propertyName_or_requiredPropertyIndex);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new DoubleValueSwig($r);
		}
		return $r;
	}
}

class Date {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getYear() {
		return Date_getYear($this->_cPtr);
	}

	function getMonth() {
		return Date_getMonth($this->_cPtr);
	}

	function getDay() {
		return Date_getDay($this->_cPtr);
	}
}

class PropertyMetaDataSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getName() {
		return PropertyMetaDataSwig_getName($this->_cPtr);
	}

	function getDataFilesWherePresent() {
		$r=PropertyMetaDataSwig_getDataFilesWherePresent($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new VectorStringSwig($r);
		}
		return $r;
	}

	function getType() {
		return PropertyMetaDataSwig_getType($this->_cPtr);
	}

	function getCategory() {
		return PropertyMetaDataSwig_getCategory($this->_cPtr);
	}

	function getUrl() {
		return PropertyMetaDataSwig_getUrl($this->_cPtr);
	}

	function getAvailable() {
		return PropertyMetaDataSwig_getAvailable($this->_cPtr);
	}

	function getDisplayOrder() {
		return PropertyMetaDataSwig_getDisplayOrder($this->_cPtr);
	}

	function getIsMandatory() {
		return PropertyMetaDataSwig_getIsMandatory($this->_cPtr);
	}

	function getIsList() {
		return PropertyMetaDataSwig_getIsList($this->_cPtr);
	}

	function getIsObsolete() {
		return PropertyMetaDataSwig_getIsObsolete($this->_cPtr);
	}

	function getShow() {
		return PropertyMetaDataSwig_getShow($this->_cPtr);
	}

	function getShowValues() {
		return PropertyMetaDataSwig_getShowValues($this->_cPtr);
	}

	function getDescription() {
		return PropertyMetaDataSwig_getDescription($this->_cPtr);
	}
}

class ComponentMetaDataSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getComponentIdAsInt() {
		return ComponentMetaDataSwig_getComponentIdAsInt($this->_cPtr);
	}

	function getComponentId() {
		return ComponentMetaDataSwig_getComponentId($this->_cPtr);
	}

	function getName() {
		return ComponentMetaDataSwig_getName($this->_cPtr);
	}
}

class ProfileMetaDataSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getProfileId() {
		return ProfileMetaDataSwig_getProfileId($this->_cPtr);
	}
}

class ValueMetaDataKeySwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($propertyName,$valueName=null) {
		if (is_resource($propertyName) && get_resource_type($propertyName) === '_p_ValueMetaDataKey') {
			$this->_cPtr=$propertyName;
			return;
		}
		$this->_cPtr=new_ValueMetaDataKeySwig($propertyName,$valueName);
	}

	function getPropertyName() {
		return ValueMetaDataKeySwig_getPropertyName($this->_cPtr);
	}

	function getValueName() {
		return ValueMetaDataKeySwig_getValueName($this->_cPtr);
	}
}

class ValueMetaDataSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getName() {
		return ValueMetaDataSwig_getName($this->_cPtr);
	}

	function getDescription() {
		return ValueMetaDataSwig_getDescription($this->_cPtr);
	}

	function getUrl() {
		return ValueMetaDataSwig_getUrl($this->_cPtr);
	}
}

class ComponentMetaDataCollectionSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getByKey($key) {
		$r=ComponentMetaDataCollectionSwig_getByKey($this->_cPtr,$key);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ComponentMetaDataSwig($r);
		}
		return $r;
	}

	function getByIndex($index) {
		$r=ComponentMetaDataCollectionSwig_getByIndex($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ComponentMetaDataSwig($r);
		}
		return $r;
	}

	function getSize() {
		return ComponentMetaDataCollectionSwig_getSize($this->_cPtr);
	}
}

class PropertyMetaDataCollectionSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getByKey($key) {
		$r=PropertyMetaDataCollectionSwig_getByKey($this->_cPtr,$key);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new PropertyMetaDataSwig($r);
		}
		return $r;
	}

	function getByIndex($index) {
		$r=PropertyMetaDataCollectionSwig_getByIndex($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new PropertyMetaDataSwig($r);
		}
		return $r;
	}

	function getSize() {
		return PropertyMetaDataCollectionSwig_getSize($this->_cPtr);
	}
}

class ProfileMetaDataCollectionSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getByKey($key) {
		$r=ProfileMetaDataCollectionSwig_getByKey($this->_cPtr,$key);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ProfileMetaDataSwig($r);
		}
		return $r;
	}

	function getByIndex($index) {
		$r=ProfileMetaDataCollectionSwig_getByIndex($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ProfileMetaDataSwig($r);
		}
		return $r;
	}

	function getSize() {
		return ProfileMetaDataCollectionSwig_getSize($this->_cPtr);
	}
}

class ValueMetaDataCollectionSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getByKey($key) {
		$r=ValueMetaDataCollectionSwig_getByKey($this->_cPtr,$key);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ValueMetaDataSwig($r);
		}
		return $r;
	}

	function getByIndex($index) {
		$r=ValueMetaDataCollectionSwig_getByIndex($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ValueMetaDataSwig($r);
		}
		return $r;
	}

	function getSize() {
		return ValueMetaDataCollectionSwig_getSize($this->_cPtr);
	}
}

class MetaDataSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getComponents() {
		$r=MetaDataSwig_getComponents($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ComponentMetaDataCollectionSwig($r);
		}
		return $r;
	}

	function getProperties() {
		$r=MetaDataSwig_getProperties($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new PropertyMetaDataCollectionSwig($r);
		}
		return $r;
	}

	function getProfiles() {
		$r=MetaDataSwig_getProfiles($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ProfileMetaDataCollectionSwig($r);
		}
		return $r;
	}

	function getValues() {
		$r=MetaDataSwig_getValues($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ValueMetaDataCollectionSwig($r);
		}
		return $r;
	}

	function getValuesForProperty($property) {
		$r=MetaDataSwig_getValuesForProperty($this->_cPtr,$property);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ValueMetaDataCollectionSwig($r);
		}
		return $r;
	}

	function getValuesForProfile($profile) {
		$r=MetaDataSwig_getValuesForProfile($this->_cPtr,$profile);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ValueMetaDataCollectionSwig($r);
		}
		return $r;
	}

	function getComponentForProfile($profile) {
		$r=MetaDataSwig_getComponentForProfile($this->_cPtr,$profile);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ComponentMetaDataSwig($r);
		}
		return $r;
	}

	function getComponentForProperty($property) {
		$r=MetaDataSwig_getComponentForProperty($this->_cPtr,$property);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ComponentMetaDataSwig($r);
		}
		return $r;
	}

	function getDefaultProfileForComponent($component) {
		$r=MetaDataSwig_getDefaultProfileForComponent($this->_cPtr,$component);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ProfileMetaDataSwig($r);
		}
		return $r;
	}

	function getDefaultValueForProperty($property) {
		$r=MetaDataSwig_getDefaultValueForProperty($this->_cPtr,$property);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ValueMetaDataSwig($r);
		}
		return $r;
	}

	function getPropertiesForComponent($component) {
		$r=MetaDataSwig_getPropertiesForComponent($this->_cPtr,$component);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new PropertyMetaDataCollectionSwig($r);
		}
		return $r;
	}

	function getPropertyForValue($value) {
		$r=MetaDataSwig_getPropertyForValue($this->_cPtr,$value);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new PropertyMetaDataSwig($r);
		}
		return $r;
	}
}

class EngineBaseSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function setLicenseKey($licenceKey) {
		EngineBaseSwig_setLicenseKey($this->_cPtr,$licenceKey);
	}

	function setDataUpdateUrl($updateUrl) {
		EngineBaseSwig_setDataUpdateUrl($this->_cPtr,$updateUrl);
	}

	function getMetaData() {
		$r=EngineBaseSwig_getMetaData($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new MetaDataSwig($r);
		}
		return $r;
	}

	function getAutomaticUpdatesEnabled() {
		return EngineBaseSwig_getAutomaticUpdatesEnabled($this->_cPtr);
	}

	function processBase($evidence) {
		$r=EngineBaseSwig_processBase($this->_cPtr,$evidence);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ResultsBaseSwig($r);
		}
		return $r;
	}

	function refreshData($fileName_or_data=null,$length=null) {
		switch (func_num_args()) {
		case 0: EngineBaseSwig_refreshData($this->_cPtr); break;
		case 1: EngineBaseSwig_refreshData($this->_cPtr,$fileName_or_data); break;
		default: EngineBaseSwig_refreshData($this->_cPtr,$fileName_or_data,$length);
		}
	}

	function getDataUpdateUrl() {
		return EngineBaseSwig_getDataUpdateUrl($this->_cPtr);
	}

	function getPublishedTime() {
		$r=EngineBaseSwig_getPublishedTime($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Date($r);
		}
		return $r;
	}

	function getUpdateAvailableTime() {
		$r=EngineBaseSwig_getUpdateAvailableTime($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Date($r);
		}
		return $r;
	}

	function getDataFilePath() {
		return EngineBaseSwig_getDataFilePath($this->_cPtr);
	}

	function getDataFileTempPath() {
		return EngineBaseSwig_getDataFileTempPath($this->_cPtr);
	}

	function getProduct() {
		return EngineBaseSwig_getProduct($this->_cPtr);
	}

	function getType() {
		return EngineBaseSwig_getType($this->_cPtr);
	}

	function getKeys() {
		$r=EngineBaseSwig_getKeys($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new VectorStringSwig($r);
		}
		return $r;
	}

	function getIsThreadSafe() {
		return EngineBaseSwig_getIsThreadSafe($this->_cPtr);
	}
}

class ConfigBaseSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function setUseUpperPrefixHeaders($use) {
		ConfigBaseSwig_setUseUpperPrefixHeaders($this->_cPtr,$use);
	}

	function setUseTempFile($use) {
		ConfigBaseSwig_setUseTempFile($this->_cPtr,$use);
	}

	function setReuseTempFile($reuse) {
		ConfigBaseSwig_setReuseTempFile($this->_cPtr,$reuse);
	}

	function setTempDirectories($tempDirs) {
		ConfigBaseSwig_setTempDirectories($this->_cPtr,$tempDirs);
	}

	function getUseUpperPrefixHeaders() {
		return ConfigBaseSwig_getUseUpperPrefixHeaders($this->_cPtr);
	}

	function getUseTempFile() {
		return ConfigBaseSwig_getUseTempFile($this->_cPtr);
	}

	function getReuseTempFile() {
		return ConfigBaseSwig_getReuseTempFile($this->_cPtr);
	}

	function getTempDirectories() {
		$r=ConfigBaseSwig_getTempDirectories($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new VectorStringSwig($r);
		}
		return $r;
	}

	function getConcurrency() {
		return ConfigBaseSwig_getConcurrency($this->_cPtr);
	}
}

class ConfigDeviceDetectionSwig extends ConfigBaseSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		ConfigBaseSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return ConfigBaseSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return ConfigBaseSwig::__isset($var);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function setUpdateMatchedUserAgent($update) {
		ConfigDeviceDetectionSwig_setUpdateMatchedUserAgent($this->_cPtr,$update);
	}

	function setMaxMatchedUserAgentLength($length) {
		ConfigDeviceDetectionSwig_setMaxMatchedUserAgentLength($this->_cPtr,$length);
	}

	function setAllowUnmatched($allow) {
		ConfigDeviceDetectionSwig_setAllowUnmatched($this->_cPtr,$allow);
	}

	function getUpdateMatchedUserAgent() {
		return ConfigDeviceDetectionSwig_getUpdateMatchedUserAgent($this->_cPtr);
	}

	function getMaxMatchedUserAgentLength() {
		return ConfigDeviceDetectionSwig_getMaxMatchedUserAgentLength($this->_cPtr);
	}

	function getAllowUnmatched() {
		return ConfigDeviceDetectionSwig_getAllowUnmatched($this->_cPtr);
	}
}

class EvidenceBaseSwig extends MapStringStringSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		MapStringStringSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return MapStringStringSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return MapStringStringSwig::__isset($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_EvidenceBase') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_EvidenceBaseSwig();
	}
}

class EvidenceDeviceDetectionSwig extends EvidenceBaseSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		EvidenceBaseSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return EvidenceBaseSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return EvidenceBaseSwig::__isset($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_EvidenceDeviceDetection') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_EvidenceDeviceDetectionSwig();
	}
}

class EngineDeviceDetectionSwig extends EngineBaseSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		EngineBaseSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return EngineBaseSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return EngineBaseSwig::__isset($var);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	static function defaultElementDataKey() {
		if (func_num_args()) {
			EngineDeviceDetectionSwig_defaultElementDataKey_set(func_get_arg(0));
			return;
		}

		return EngineDeviceDetectionSwig_defaultElementDataKey_get();
	}

	function processDeviceDetection($evidence_or_userAgent) {
		$r=EngineDeviceDetectionSwig_processDeviceDetection($this->_cPtr,$evidence_or_userAgent);
		if (!is_resource($r)) return $r;
		return new ResultsDeviceDetectionSwig($r);
	}
}

class ResultsDeviceDetectionSwig extends ResultsBaseSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		ResultsBaseSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return ResultsBaseSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return ResultsBaseSwig::__isset($var);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getDeviceId() {
		return ResultsDeviceDetectionSwig_getDeviceId($this->_cPtr);
	}

	function getUserAgent($resultIndex) {
		return ResultsDeviceDetectionSwig_getUserAgent($this->_cPtr,$resultIndex);
	}

	function getUserAgents() {
		return ResultsDeviceDetectionSwig_getUserAgents($this->_cPtr);
	}
}

class ResultsHashSwig extends ResultsDeviceDetectionSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		ResultsDeviceDetectionSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return ResultsDeviceDetectionSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return ResultsDeviceDetectionSwig::__isset($var);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function getDeviceId($resultIndex=null) {
		switch (func_num_args()) {
		case 0: $r=ResultsHashSwig_getDeviceId($this->_cPtr); break;
		default: $r=ResultsHashSwig_getDeviceId($this->_cPtr,$resultIndex);
		}
		return $r;
	}

	function getDifference($resultIndex=null) {
		switch (func_num_args()) {
		case 0: $r=ResultsHashSwig_getDifference($this->_cPtr); break;
		default: $r=ResultsHashSwig_getDifference($this->_cPtr,$resultIndex);
		}
		return $r;
	}

	function getMethod($resultIndex=null) {
		switch (func_num_args()) {
		case 0: $r=ResultsHashSwig_getMethod($this->_cPtr); break;
		default: $r=ResultsHashSwig_getMethod($this->_cPtr,$resultIndex);
		}
		return $r;
	}

	function getDrift($resultIndex=null) {
		switch (func_num_args()) {
		case 0: $r=ResultsHashSwig_getDrift($this->_cPtr); break;
		default: $r=ResultsHashSwig_getDrift($this->_cPtr,$resultIndex);
		}
		return $r;
	}

	function getTrace() {
		return ResultsHashSwig_getTrace($this->_cPtr);
	}

	function getMatchedNodes() {
		return ResultsHashSwig_getMatchedNodes($this->_cPtr);
	}

	function getIterations() {
		return ResultsHashSwig_getIterations($this->_cPtr);
	}

	function getUserAgent($resultIndex) {
		return ResultsHashSwig_getUserAgent($this->_cPtr,$resultIndex);
	}

	function getUserAgents() {
		return ResultsHashSwig_getUserAgents($this->_cPtr);
	}
}

class CollectionConfigSwig {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CollectionConfig') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CollectionConfigSwig();
	}

	function setCapacity($capacity) {
		CollectionConfigSwig_setCapacity($this->_cPtr,$capacity);
	}

	function setConcurrency($concurrency) {
		CollectionConfigSwig_setConcurrency($this->_cPtr,$concurrency);
	}

	function setLoaded($loaded) {
		CollectionConfigSwig_setLoaded($this->_cPtr,$loaded);
	}

	function getCapacity() {
		return CollectionConfigSwig_getCapacity($this->_cPtr);
	}

	function getConcurrency() {
		return CollectionConfigSwig_getConcurrency($this->_cPtr);
	}

	function getLoaded() {
		return CollectionConfigSwig_getLoaded($this->_cPtr);
	}
}

class ConfigHashSwig extends ConfigDeviceDetectionSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		ConfigDeviceDetectionSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return ConfigDeviceDetectionSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return ConfigDeviceDetectionSwig::__isset($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ConfigHash') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ConfigHashSwig();
	}

	function setHighPerformance() {
		ConfigHashSwig_setHighPerformance($this->_cPtr);
	}

	function setBalanced() {
		ConfigHashSwig_setBalanced($this->_cPtr);
	}

	function setBalancedTemp() {
		ConfigHashSwig_setBalancedTemp($this->_cPtr);
	}

	function setLowMemory() {
		ConfigHashSwig_setLowMemory($this->_cPtr);
	}

	function setMaxPerformance() {
		ConfigHashSwig_setMaxPerformance($this->_cPtr);
	}

	function setDrift($drift) {
		ConfigHashSwig_setDrift($this->_cPtr,$drift);
	}

	function setDifference($difference) {
		ConfigHashSwig_setDifference($this->_cPtr,$difference);
	}

	function setConcurrency($concurrency) {
		ConfigHashSwig_setConcurrency($this->_cPtr,$concurrency);
	}

	function setUsePerformanceGraph($use) {
		ConfigHashSwig_setUsePerformanceGraph($this->_cPtr,$use);
	}

	function setUsePredictiveGraph($use) {
		ConfigHashSwig_setUsePredictiveGraph($this->_cPtr,$use);
	}

	function setTraceRoute($trace) {
		ConfigHashSwig_setTraceRoute($this->_cPtr,$trace);
	}

	function getStrings() {
		$r=ConfigHashSwig_getStrings($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CollectionConfigSwig($r);
		}
		return $r;
	}

	function getProperties() {
		$r=ConfigHashSwig_getProperties($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CollectionConfigSwig($r);
		}
		return $r;
	}

	function getValues() {
		$r=ConfigHashSwig_getValues($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CollectionConfigSwig($r);
		}
		return $r;
	}

	function getProfiles() {
		$r=ConfigHashSwig_getProfiles($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CollectionConfigSwig($r);
		}
		return $r;
	}

	function getNodes() {
		$r=ConfigHashSwig_getNodes($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CollectionConfigSwig($r);
		}
		return $r;
	}

	function getProfileOffsets() {
		$r=ConfigHashSwig_getProfileOffsets($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CollectionConfigSwig($r);
		}
		return $r;
	}

	function getDrift() {
		return ConfigHashSwig_getDrift($this->_cPtr);
	}

	function getDifference() {
		return ConfigHashSwig_getDifference($this->_cPtr);
	}

	function getUsePerformanceGraph() {
		return ConfigHashSwig_getUsePerformanceGraph($this->_cPtr);
	}

	function getUsePredictiveGraph() {
		return ConfigHashSwig_getUsePredictiveGraph($this->_cPtr);
	}

	function getConcurrency() {
		return ConfigHashSwig_getConcurrency($this->_cPtr);
	}

	function getTraceRoute() {
		return ConfigHashSwig_getTraceRoute($this->_cPtr);
	}
}

class EngineHashSwig extends EngineDeviceDetectionSwig {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_alter_newobject($this->_cPtr,$value);
		EngineDeviceDetectionSwig::__set($var,$value);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_FiftyOneDegreesHashEngine_get_newobject($this->_cPtr);
		return EngineDeviceDetectionSwig::__get($var);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return EngineDeviceDetectionSwig::__isset($var);
	}

	function getPublishedTime() {
		$r=EngineHashSwig_getPublishedTime($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Date($r);
		}
		return $r;
	}

	function getUpdateAvailableTime() {
		$r=EngineHashSwig_getUpdateAvailableTime($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Date($r);
		}
		return $r;
	}

	function getDataFilePath() {
		return EngineHashSwig_getDataFilePath($this->_cPtr);
	}

	function getDataFileTempPath() {
		return EngineHashSwig_getDataFileTempPath($this->_cPtr);
	}

	function refreshData($fileName_or_data=null,$length=null) {
		switch (func_num_args()) {
		case 0: EngineHashSwig_refreshData($this->_cPtr); break;
		case 1: EngineHashSwig_refreshData($this->_cPtr,$fileName_or_data); break;
		default: EngineHashSwig_refreshData($this->_cPtr,$fileName_or_data,$length);
		}
	}

	function process($evidence_or_userAgent) {
		$r=EngineHashSwig_process($this->_cPtr,$evidence_or_userAgent);
		if (!is_resource($r)) return $r;
		return new ResultsHashSwig($r);
	}

	function processBase($evidence) {
		$r=EngineHashSwig_processBase($this->_cPtr,$evidence);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ResultsBaseSwig($r);
		}
		return $r;
	}

	function processDeviceDetection($evidence_or_userAgent) {
		$r=EngineHashSwig_processDeviceDetection($this->_cPtr,$evidence_or_userAgent);
		if (!is_resource($r)) return $r;
		return new ResultsDeviceDetectionSwig($r);
	}

	function __construct($fileName_or_data=null,$config_or_length=null,$properties_or_config=null,$properties=null) {
		if (is_resource($fileName_or_data) && get_resource_type($fileName_or_data) === '_p_EngineHash') {
			$this->_cPtr=$fileName_or_data;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_EngineHashSwig(); break;
		case 1: $this->_cPtr=new_EngineHashSwig($fileName_or_data); break;
		case 2: $this->_cPtr=new_EngineHashSwig($fileName_or_data,$config_or_length); break;
		case 3: $this->_cPtr=new_EngineHashSwig($fileName_or_data,$config_or_length,$properties_or_config); break;
		default: $this->_cPtr=new_EngineHashSwig($fileName_or_data,$config_or_length,$properties_or_config,$properties);
		}
	}
}


?>
